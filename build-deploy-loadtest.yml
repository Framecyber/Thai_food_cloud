name: Build-Deploy-LoadTest

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_FRONTEND: ghcr.io/${{ github.repository }}/thai-food-frontend
  IMAGE_BACKEND: ghcr.io/${{ github.repository }}/thai-food-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- FRONTEND (Angular -> Nginx) ---
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Frontend | Install & build
        working-directory: ./frontend
        run: |
          npm ci
          npm run build -- --configuration=production

      - name: Frontend | Build Docker image
        run: |
          docker build -t $IMAGE_FRONTEND:${{ github.sha }} -f ./frontend/Dockerfile .

      # --- BACKEND (Spring Boot) ---
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Backend | Build jar
        working-directory: ./backend
        run: |
          ./mvnw -q -DskipTests package

      - name: Backend | Build Docker image
        run: |
          docker build -t $IMAGE_BACKEND:${{ github.sha }} -f ./backend/Dockerfile .

      # --- Push to GHCR ---
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push images
        run: |
          docker push $IMAGE_FRONTEND:${{ github.sha }}
          docker push $IMAGE_BACKEND:${{ github.sha }}

      - name: Write image tags artifact
        run: |
          echo "FRONT=${IMAGE_FRONTEND}:${{ github.sha }}" >> images.env
          echo "BACK=${IMAGE_BACKEND}:${{ github.sha }}" >> images.env
      - name: Upload image tags
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: images.env

  deploy-eb:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Download image tags
        uses: actions/download-artifact@v4
        with:
          name: images
          path: .
      - name: Load vars
        run: cat images.env >> $GITHUB_ENV

      # --- Deploy to Elastic Beanstalk ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy to Elastic Beanstalk
        run: |
          zip -r deploy.zip Dockerrun.aws.json .ebextensions
          aws elasticbeanstalk create-application-version \
            --application-name "thai-food-app" \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket="${{ secrets.EB_S3_BUCKET }}",S3Key="deploy-${{ github.sha }}.zip"

          aws elasticbeanstalk update-environment \
            --environment-name "thai-food-env" \
            --version-label ${{ github.sha }}

  load-test:
    needs: deploy-eb
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install k6
        run: |
          curl -s https://api.github.com/repos/grafana/k6/releases/latest \
          | grep "browser_download_url.*linux-amd64\.deb" \
          | cut -d '"' -f 4 \
          | wget -qi -
          sudo apt install ./k6*.deb

      - name: Run k6 load test
        run: |
          k6 run tests/load-test.js --vus 50 --duration 30s --summary-export=summary.json

      - name: Upload k6 results
        uses: actions/upload-artifact@v4
        with:
          name: k6-summary
          path: summary.json
